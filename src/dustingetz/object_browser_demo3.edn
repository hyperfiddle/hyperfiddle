{
;;;;;;;;;;;;;;;;
 ;; ns browser ;;
;;;;;;;;;;;;;;;;
 clojure-all-ns (hfql/props [ns-name ns-doc]
                  {::hfql/select (find-ns %)})
 find-ns [ns-name
          ns-doc
          meta                          ; nav to TreeView
          (hfql/props ns-publics* {::hfql/select (public-vars %)})
          ns-imports
          ns-interns]
 public-vars (hfql/props [var-name var-doc]
               {::hfql/select (var-detail %)})
 var-detail [var-name var-doc meta var-macro? var-arglists]

;;;;;;;;;;;;;;
 ;; threadmx ;;
;;;;;;;;;;;;;;
 thread-mx [thread-count
            (hfql/props get-all-threads {::hfql/select (threads-info)})
            get-deadlocked-threads
            ]
 threads-info (hfql/props
                [.getThreadName
                 {.getThreadState str}
                 .getThreadId
                 .getBlockedTime
                 .getWaitedTime
                 .getLockInfo
                 dustingetz.datafy-jvm2/threadinfo-cpu-time]
                {::hfql/select (thread-info %)})
 thread-info [.getThreadName
              {.getThreadState str}
              .getThreadId
              (hfql/props get-stack-trace {::hfql/select (thread-stack-trace %)})
              .getBlockedTime
              .getWaitedTime
              .getLockInfo
              dustingetz.datafy-jvm2/threadinfo-cpu-time]

 thread-stack-trace [.getClassName .getMethodName .getLineNumber]

;;;;;;;;;
 ;; git ;;
;;;;;;;;;

 dustingetz.datafy-git2/load-repo []

;;;;;;;;;;;;;;
 ;; datomic  ;;
;;;;;;;;;;;;;;

 datomic-entity []

;;;;;;;;;;;
 ;; class ;;
;;;;;;;;;;;

 class-view []

;;;;;;;;;;
 ;; file ;;
;;;;;;;;;;

 clojure.java.io/file []

 }
